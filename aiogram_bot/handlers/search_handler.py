import asyncio
import os
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram_bot.parser.parser_rkn import search_site, OUTPUT_FILE


router = Router()


class SearchState(StatesGroup):
    waiting_for_query = State()


@router.message(Command("search"))
async def process_search(message: types.Message, state: FSMContext):
    await message.reply("üîç –í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –∏–ª–∏ URL –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    await state.set_state(SearchState.waiting_for_query)


@router.message(SearchState.waiting_for_query)
async def handle_user_query(message: types.Message, state: FSMContext):
    user_query = message.text.strip()
    if not user_query:
        await message.reply("‚ùå –í—ã –Ω–µ –≤–≤–µ–ª–∏ –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    await message.reply(f"üîç –ó–∞–ø—Ä–æ—Å '{user_query}' –ø—Ä–∏–Ω—è—Ç. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ...")
    loop = asyncio.get_event_loop()
    await loop.run_in_executor(None, search_site, user_query)

    if os.path.exists(OUTPUT_FILE):
        file = FSInputFile(OUTPUT_FILE)
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="–î–∞", callback_data="yes_dynadot")],
            [InlineKeyboardButton(text="–ù–µ—Ç", callback_data="no_dynadot")]
        ])
        await message.answer_document(
            file,
            caption="‚úÖ <b>–í–æ—Ç —á—Ç–æ —è —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –∏–∑ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–æ–º–µ–Ω–æ–≤.</b>\n\n"
                    "- –•–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å Dynadot? –ñ–º–∏ <b>[–î–∞]</b>.\n"
                    "- –•–æ—á–µ—à—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª? –ñ–º–∏ <b>[–ù–µ—Ç]</b> –∏ –∫–∏–¥–∞–π —Ñ–∞–π–ª.",
            reply_markup=keyboard, parse_mode="HTML"
        )
    else:
        await message.reply("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    await state.clear()

